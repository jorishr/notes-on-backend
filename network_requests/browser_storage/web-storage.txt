###########
WEB STORAGE
###########

########################
I.	ABOUT
II.	LOCAL STORAGE
III.	SESSION STORAGE
IV.	EXAMPLE: TEXT-AREA
V.	COOKIES
########################

###########
I.	ABOUT
###########

Web storage objects localStorage and sessionStorage allow to save key/value pairs in the browser.

What’s interesting about them is that the data survives a page refresh (for sessionStorage) and even a full browser restart (for localStorage).

Unlike cookies, web storage objects are not sent to server with each request. 

Most browsers allow at least 2 megabytes of data (or more) and have settings to configure that.

The storage is bound to the origin (domain/protocol/port triplet). That is, different protocols or subdomains infer different storage objects, they can’t access data from each other.

METHODS

The data structured as a Map collection (setItem/getItem/removeItem), but also keeps elements order and allows to access by index with key(index).

###################
II.	LOCAL STORAGE
###################

Shared between all tabs and windows from the same origin. Thus localstorage is domain specific as other sites cannot access the data of other domains.

The data does not expire. It remains after the browser restart and even OS reboot.

To access a stored local storage property value we only have to be on the same origin (domain/port/protocol), the url path can be different.

The local storage is bigger than cookie-storage, 5MB/domain vs 4kb/cookie.

Limited to plain text string data that needs to be SERIALIZED. Thus unsecure by design. Scripts and thus XSS attacks can access it, steal tokens and impersonate users.

Should only be used for public non-sensitive string data.

Does not have off-line capabilities, thus not suitable for webworkers


#####################
III.	SESSION STORAGE
#####################

Properties and methods are the same, but it’s much more limited:

The sessionStorage exists only within the current browser tab, another tab with the same page will have a different storage.

The data survives page refresh, but not closing/opening the tab.


########################
IV.	EXAMPLE: TEXT-AREA
########################

A text-area that stores the input you are typing into localStorage. Thus, if you accidently close the window, your data will still be there.

<textarea 	style="width:200px; height: 60px;" id="area" 				placeholder="Write here">
</textarea>

	<button 	onclick="localStorage.removeItem('area'); 
			area.value=''">	
			Clear</button>
	<script>
    		area.value = localStorage.getItem('area');
    		area.oninput = () => {
      		localStorage.setItem('area', area.value)};
	</script>	


